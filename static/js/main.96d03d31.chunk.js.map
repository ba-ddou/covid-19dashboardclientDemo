{"version":3,"sources":["app/components/SearchBar/countries.js","app/components/Header/index.js","app/components/SearchBar/index.js","app/components/DateSlider/index.js","app/components/Info/index.js","app/components/Map/components/MapChart/index.js","app/components/Map/index.js","app/components/AreaSeries/index.js","app/components/MarkSeries/index.js","app/components/Footer/index.js","app/index.js","serviceWorker.js","index.js"],"names":["module","exports","value","ISO_A2","Header","id","SearchBar","props","useState","options","setOptions","className","onSelect","target","countries","find","elem","onSearch","searchText","filter","element","includes","Search","size","placeholder","tickToDate","tick","tickMs","parseInt","Date","toString","split","splice","join","DateSlider","ticksNum","lastDate","lastDateEle","lastDateMs","getTime","dif","Math","abs","round","dateToTicks","setTick","color","onClick","_","min","max","onChange","tipFormatter","Stat","number","name","Info","country","code","height","colorScale","scaleLinear","domain","range","memo","setTooltipContent","data-tip","projectionConfig","scale","geography","geographies","map","geo","key","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","infections","deaths","recoveries","onMouseLeave","style","default","fill","outline","hover","pressed","Map","content","setContent","html","AreaSeries","MarkSeries","Footer","App","client","ApolloClient","setCountry","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96d03d31.chunk.js","sourcesContent":["module.exports = [\r\n\t{ value: \"afghanistan\", ISO_A2: \"AF\" },\r\n\t{ value: \"angola\", ISO_A2: \"AO\" },\r\n\t{ value: \"albania\", ISO_A2: \"AL\" },\r\n\t{ value: \"united arab emirates\", ISO_A2: \"AE\" },\r\n\t{ value: \"argentina\", ISO_A2: \"AR\" },\r\n\t{ value: \"armenia\", ISO_A2: \"AM\" },\r\n\t{ value: \"antarctica\", ISO_A2: \"AQ\" },\r\n\t{ value: \"fr. s. antarctic lands\", ISO_A2: \"TF\" },\r\n\t{ value: \"australia\", ISO_A2: \"AU\" },\r\n\t{ value: \"austria\", ISO_A2: \"AT\" },\r\n\t{ value: \"azerbaijan\", ISO_A2: \"AZ\" },\r\n\t{ value: \"burundi\", ISO_A2: \"BI\" },\r\n\t{ value: \"belgium\", ISO_A2: \"BE\" },\r\n\t{ value: \"benin\", ISO_A2: \"BJ\" },\r\n\t{ value: \"burkina faso\", ISO_A2: \"BF\" },\r\n\t{ value: \"bangladesh\", ISO_A2: \"BD\" },\r\n\t{ value: \"bulgaria\", ISO_A2: \"BG\" },\r\n\t{ value: \"bahamas\", ISO_A2: \"BS\" },\r\n\t{ value: \"bosnia and herz.\", ISO_A2: \"BA\" },\r\n\t{ value: \"belarus\", ISO_A2: \"BY\" },\r\n\t{ value: \"belize\", ISO_A2: \"BZ\" },\r\n\t{ value: \"bolivia\", ISO_A2: \"BO\" },\r\n\t{ value: \"brazil\", ISO_A2: \"BR\" },\r\n\t{ value: \"brunei\", ISO_A2: \"BN\" },\r\n\t{ value: \"bhutan\", ISO_A2: \"BT\" },\r\n\t{ value: \"botswana\", ISO_A2: \"BW\" },\r\n\t{ value: \"central african rep.\", ISO_A2: \"CF\" },\r\n\t{ value: \"canada\", ISO_A2: \"CA\" },\r\n\t{ value: \"switzerland\", ISO_A2: \"CH\" },\r\n\t{ value: \"chile\", ISO_A2: \"CL\" },\r\n\t{ value: \"china\", ISO_A2: \"CN\" },\r\n\t{ value: \"côte d'ivoire\", ISO_A2: \"CI\" },\r\n\t{ value: \"cameroon\", ISO_A2: \"CM\" },\r\n\t{ value: \"dem. rep. congo\", ISO_A2: \"CD\" },\r\n\t{ value: \"congo\", ISO_A2: \"CG\" },\r\n\t{ value: \"colombia\", ISO_A2: \"CO\" },\r\n\t{ value: \"costa rica\", ISO_A2: \"CR\" },\r\n\t{ value: \"cuba\", ISO_A2: \"CU\" },\r\n\t{ value: \"n. cyprus\", ISO_A2: \"-99\" },\r\n\t{ value: \"cyprus\", ISO_A2: \"CY\" },\r\n\t{ value: \"czechia\", ISO_A2: \"CZ\" },\r\n\t{ value: \"germany\", ISO_A2: \"DE\" },\r\n\t{ value: \"djibouti\", ISO_A2: \"DJ\" },\r\n\t{ value: \"denmark\", ISO_A2: \"DK\" },\r\n\t{ value: \"dominican rep.\", ISO_A2: \"DO\" },\r\n\t{ value: \"algeria\", ISO_A2: \"DZ\" },\r\n\t{ value: \"ecuador\", ISO_A2: \"EC\" },\r\n\t{ value: \"egypt\", ISO_A2: \"EG\" },\r\n\t{ value: \"eritrea\", ISO_A2: \"ER\" },\r\n\t{ value: \"spain\", ISO_A2: \"ES\" },\r\n\t{ value: \"estonia\", ISO_A2: \"EE\" },\r\n\t{ value: \"ethiopia\", ISO_A2: \"ET\" },\r\n\t{ value: \"finland\", ISO_A2: \"FI\" },\r\n\t{ value: \"fiji\", ISO_A2: \"FJ\" },\r\n\t{ value: \"falkland is.\", ISO_A2: \"FK\" },\r\n\t{ value: \"france\", ISO_A2: \"FR\" },\r\n\t{ value: \"gabon\", ISO_A2: \"GA\" },\r\n\t{ value: \"united kingdom\", ISO_A2: \"GB\" },\r\n\t{ value: \"georgia\", ISO_A2: \"GE\" },\r\n\t{ value: \"ghana\", ISO_A2: \"GH\" },\r\n\t{ value: \"guinea\", ISO_A2: \"GN\" },\r\n\t{ value: \"gambia\", ISO_A2: \"GM\" },\r\n\t{ value: \"guinea-bissau\", ISO_A2: \"GW\" },\r\n\t{ value: \"eq. guinea\", ISO_A2: \"GQ\" },\r\n\t{ value: \"greece\", ISO_A2: \"GR\" },\r\n\t{ value: \"greenland\", ISO_A2: \"GL\" },\r\n\t{ value: \"guatemala\", ISO_A2: \"GT\" },\r\n\t{ value: \"guyana\", ISO_A2: \"GY\" },\r\n\t{ value: \"honduras\", ISO_A2: \"HN\" },\r\n\t{ value: \"croatia\", ISO_A2: \"HR\" },\r\n\t{ value: \"haiti\", ISO_A2: \"HT\" },\r\n\t{ value: \"hungary\", ISO_A2: \"HU\" },\r\n\t{ value: \"indonesia\", ISO_A2: \"ID\" },\r\n\t{ value: \"india\", ISO_A2: \"IN\" },\r\n\t{ value: \"ireland\", ISO_A2: \"IE\" },\r\n\t{ value: \"iran\", ISO_A2: \"IR\" },\r\n\t{ value: \"iraq\", ISO_A2: \"IQ\" },\r\n\t{ value: \"iceland\", ISO_A2: \"IS\" },\r\n\t{ value: \"israel\", ISO_A2: \"IL\" },\r\n\t{ value: \"italy\", ISO_A2: \"IT\" },\r\n\t{ value: \"jamaica\", ISO_A2: \"JM\" },\r\n\t{ value: \"jordan\", ISO_A2: \"JO\" },\r\n\t{ value: \"japan\", ISO_A2: \"JP\" },\r\n\t{ value: \"kazakhstan\", ISO_A2: \"KZ\" },\r\n\t{ value: \"kenya\", ISO_A2: \"KE\" },\r\n\t{ value: \"kyrgyzstan\", ISO_A2: \"KG\" },\r\n\t{ value: \"cambodia\", ISO_A2: \"KH\" },\r\n\t{ value: \"south korea\", ISO_A2: \"KR\" },\r\n\t{ value: \"kosovo\", ISO_A2: \"XK\" },\r\n\t{ value: \"kuwait\", ISO_A2: \"KW\" },\r\n\t{ value: \"laos\", ISO_A2: \"LA\" },\r\n\t{ value: \"lebanon\", ISO_A2: \"LB\" },\r\n\t{ value: \"liberia\", ISO_A2: \"LR\" },\r\n\t{ value: \"libya\", ISO_A2: \"LY\" },\r\n\t{ value: \"sri lanka\", ISO_A2: \"LK\" },\r\n\t{ value: \"lesotho\", ISO_A2: \"LS\" },\r\n\t{ value: \"lithuania\", ISO_A2: \"LT\" },\r\n\t{ value: \"luxembourg\", ISO_A2: \"LU\" },\r\n\t{ value: \"latvia\", ISO_A2: \"LV\" },\r\n\t{ value: \"morocco\", ISO_A2: \"MA\" },\r\n\t{ value: \"moldova\", ISO_A2: \"MD\" },\r\n\t{ value: \"madagascar\", ISO_A2: \"MG\" },\r\n\t{ value: \"mexico\", ISO_A2: \"MX\" },\r\n\t{ value: \"macedonia\", ISO_A2: \"MK\" },\r\n\t{ value: \"mali\", ISO_A2: \"ML\" },\r\n\t{ value: \"myanmar\", ISO_A2: \"MM\" },\r\n\t{ value: \"montenegro\", ISO_A2: \"ME\" },\r\n\t{ value: \"mongolia\", ISO_A2: \"MN\" },\r\n\t{ value: \"mozambique\", ISO_A2: \"MZ\" },\r\n\t{ value: \"mauritania\", ISO_A2: \"MR\" },\r\n\t{ value: \"malawi\", ISO_A2: \"MW\" },\r\n\t{ value: \"malaysia\", ISO_A2: \"MY\" },\r\n\t{ value: \"namibia\", ISO_A2: \"NA\" },\r\n\t{ value: \"new caledonia\", ISO_A2: \"NC\" },\r\n\t{ value: \"niger\", ISO_A2: \"NE\" },\r\n\t{ value: \"nigeria\", ISO_A2: \"NG\" },\r\n\t{ value: \"nicaragua\", ISO_A2: \"NI\" },\r\n\t{ value: \"netherlands\", ISO_A2: \"NL\" },\r\n\t{ value: \"norway\", ISO_A2: \"NO\" },\r\n\t{ value: \"nepal\", ISO_A2: \"NP\" },\r\n\t{ value: \"new zealand\", ISO_A2: \"NZ\" },\r\n\t{ value: \"oman\", ISO_A2: \"OM\" },\r\n\t{ value: \"pakistan\", ISO_A2: \"PK\" },\r\n\t{ value: \"panama\", ISO_A2: \"PA\" },\r\n\t{ value: \"peru\", ISO_A2: \"PE\" },\r\n\t{ value: \"philippines\", ISO_A2: \"PH\" },\r\n\t{ value: \"papua new guinea\", ISO_A2: \"PG\" },\r\n\t{ value: \"poland\", ISO_A2: \"PL\" },\r\n\t{ value: \"puerto rico\", ISO_A2: \"PR\" },\r\n\t{ value: \"north korea\", ISO_A2: \"KP\" },\r\n\t{ value: \"portugal\", ISO_A2: \"PT\" },\r\n\t{ value: \"paraguay\", ISO_A2: \"PY\" },\r\n\t{ value: \"palestine\", ISO_A2: \"PS\" },\r\n\t{ value: \"qatar\", ISO_A2: \"QA\" },\r\n\t{ value: \"romania\", ISO_A2: \"RO\" },\r\n\t{ value: \"russia\", ISO_A2: \"RU\" },\r\n\t{ value: \"rwanda\", ISO_A2: \"RW\" },\r\n\t{ value: \"w. sahara\", ISO_A2: \"EH\" },\r\n\t{ value: \"saudi arabia\", ISO_A2: \"SA\" },\r\n\t{ value: \"sudan\", ISO_A2: \"SD\" },\r\n\t{ value: \"s. sudan\", ISO_A2: \"SS\" },\r\n\t{ value: \"senegal\", ISO_A2: \"SN\" },\r\n\t{ value: \"solomon is.\", ISO_A2: \"SB\" },\r\n\t{ value: \"sierra leone\", ISO_A2: \"SL\" },\r\n\t{ value: \"el salvador\", ISO_A2: \"SV\" },\r\n\t{ value: \"somaliland\", ISO_A2: \"-99\" },\r\n\t{ value: \"somalia\", ISO_A2: \"SO\" },\r\n\t{ value: \"serbia\", ISO_A2: \"RS\" },\r\n\t{ value: \"suriname\", ISO_A2: \"SR\" },\r\n\t{ value: \"slovakia\", ISO_A2: \"SK\" },\r\n\t{ value: \"slovenia\", ISO_A2: \"SI\" },\r\n\t{ value: \"sweden\", ISO_A2: \"SE\" },\r\n\t{ value: \"swaziland\", ISO_A2: \"SZ\" },\r\n\t{ value: \"syria\", ISO_A2: \"SY\" },\r\n\t{ value: \"chad\", ISO_A2: \"TD\" },\r\n\t{ value: \"togo\", ISO_A2: \"TG\" },\r\n\t{ value: \"thailand\", ISO_A2: \"TH\" },\r\n\t{ value: \"tajikistan\", ISO_A2: \"TJ\" },\r\n\t{ value: \"turkmenistan\", ISO_A2: \"TM\" },\r\n\t{ value: \"timor-leste\", ISO_A2: \"TL\" },\r\n\t{ value: \"trinidad and tobago\", ISO_A2: \"TT\" },\r\n\t{ value: \"tunisia\", ISO_A2: \"TN\" },\r\n\t{ value: \"turkey\", ISO_A2: \"TR\" },\r\n\t{ value: \"taiwan\", ISO_A2: \"TW\" },\r\n\t{ value: \"tanzania\", ISO_A2: \"TZ\" },\r\n\t{ value: \"uganda\", ISO_A2: \"UG\" },\r\n\t{ value: \"ukraine\", ISO_A2: \"UA\" },\r\n\t{ value: \"uruguay\", ISO_A2: \"UY\" },\r\n\t{ value: \"united states of america\", ISO_A2: \"US\" },\r\n\t{ value: \"uzbekistan\", ISO_A2: \"UZ\" },\r\n\t{ value: \"venezuela\", ISO_A2: \"VE\" },\r\n\t{ value: \"vietnam\", ISO_A2: \"VN\" },\r\n\t{ value: \"vanuatu\", ISO_A2: \"VU\" },\r\n\t{ value: \"yemen\", ISO_A2: \"YE\" },\r\n\t{ value: \"south africa\", ISO_A2: \"ZA\" },\r\n\t{ value: \"zambia\", ISO_A2: \"ZM\" },\r\n\t{ value: \"zimbabwe\", ISO_A2: \"ZW\" },\r\n];\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div id=\"header\">\r\n\t\t\t<h1>Covid-19 Dashboard</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Input } from \"antd\";\r\nimport \"./styles.sass\";\r\nimport countries from \"./countries\";\r\n\r\nconst SearchBar = (props) => {\r\n\tconst [options, setOptions] = useState();\r\n\r\n\tconst onSelect = (value) => {\r\n\t\tlet target = countries.find((elem) => elem.value == value);\r\n\t\tprops.onSelect(target);\r\n\t};\r\n\r\n\tconst onSearch = (searchText) => {\r\n\t\tsetOptions(\r\n\t\t\tcountries.filter((element) => {\r\n\t\t\t\treturn element.value.includes(searchText);\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mainPanel\">\r\n\t\t\t<AutoComplete\r\n\t\t\t\toptions={options}\r\n\t\t\t\tonSelect={onSelect}\r\n\t\t\t\tonSearch={onSearch}>\r\n\t\t\t\t<Input.Search size=\"medium\" placeholder=\"country name\" />\r\n\t\t\t</AutoComplete>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport { ArrowLeft, ArrowRight, Calendar } from \"react-feather\";\r\nimport { Slider } from \"antd\";\r\nimport \"./styles.sass\";\r\n\r\nlet firstDateMs = \"1582239600000\"; // 21/01/2020;\r\n\r\nfunction dateToTicks(lastDate) {\r\n\tlet lastDateEle = lastDate.split(\"/\");\r\n\tlet lastDateMs = new Date(\r\n\t\tlastDateEle[2],\r\n\t\tlastDateEle[1],\r\n\t\tlastDateEle[0]\r\n\t).getTime();\r\n\r\n\tlet dif = Math.abs(lastDateMs - firstDateMs);\r\n\r\n\treturn 1 + Math.round(dif / 1000 / 60 / 60 / 24);\r\n}\r\n\r\nfunction tickToDate(tick) {\r\n\tlet tickMs = parseInt(firstDateMs) + (tick - 1) * 24 * 60 * 60 * 1000;\r\n\tlet date = new Date(tickMs);\r\n\treturn date.toString().split(\" \").splice(0, 4).join(\" \");\r\n}\r\n\r\nconst DateSlider = ({ lastDate }) => {\r\n\tlet ticksNum = dateToTicks(lastDate);\r\n\tlet [tick, setTick] = useState(ticksNum);\r\n\treturn (\r\n\t\t<div id=\"dateSlider\">\r\n\t\t\t<div id=\"dateSlider-cpanel\">\r\n\t\t\t\t<ArrowLeft\r\n\t\t\t\t\tcolor={tick > 1 ? \"#141414\" : \"#d6d6da\"}\r\n\t\t\t\t\tsize={20}\r\n\t\t\t\t\tonClick={(_) => {\r\n\t\t\t\t\t\tif (tick > 1) setTick(--tick);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<span>{tickToDate(tick)}</span>\r\n\t\t\t\t<ArrowRight\r\n\t\t\t\t\tcolor={tick < ticksNum ? \"#141414\" : \"#d6d6da\"}\r\n\t\t\t\t\tsize={20}\r\n\t\t\t\t\tonClick={(_) => {\r\n\t\t\t\t\t\tif (tick < ticksNum) setTick(++tick);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"dateSlider-slider\">\r\n\t\t\t\t<Calendar color=\"#FF6F61\" size={20} />\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tvalue={tick}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tmax={ticksNum}\r\n\t\t\t\t\tonChange={(tick) => setTick(tick)}\r\n\t\t\t\t\ttipFormatter={(tick) => tickToDate(tick)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DateSlider;\r\n","import React from \"react\";\r\nimport DateSlider from \"app/components/DateSlider\";\r\nimport \"./styles.sass\";\r\nimport Flag from \"react-world-flags\";\r\n\r\nconst Stat = ({ number, name }) => {\r\n\treturn (\r\n\t\t<div className=\"infoPanel-stats-stat\">\r\n\t\t\t<span>{number}</span>\r\n\t\t\t<span>{name}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Info = ({ country }) => {\r\n\treturn (\r\n\t\t<div id=\"infoPanel\" className=\"mainPanel\">\r\n\t\t\t<span id=\"infoPanel-title\">\r\n\t\t\t\t{country.value + \" \"} <Flag code={country.ISO_A2} height=\"20\" />\r\n\t\t\t</span>\r\n\t\t\t<DateSlider lastDate=\"25/03/2020\" />\r\n\t\t\t<div id=\"infoPanel-stats\">\r\n\t\t\t\t<Stat number=\"1124\" name=\"Infections\" />\r\n\t\t\t\t<Stat number=\"84\" name=\"Deaths\" />\r\n\t\t\t\t<Stat number=\"96\" name=\"Recoveries\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n\tZoomableGroup,\r\n\tComposableMap,\r\n\tGeographies,\r\n\tGeography,\r\n} from \"react-simple-maps\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nconst geoUrl =\r\n\t\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n\t.domain([1000000, 400000000])\r\n\t.range([\"#ffedea\", \"#ff5233\"]);\r\nconst rounded = (num) => {\r\n\tif (num > 1000000000) {\r\n\t\treturn Math.round(num / 100000000) / 10 + \"Bn\";\r\n\t} else if (num > 1000000) {\r\n\t\treturn Math.round(num / 100000) / 10 + \"M\";\r\n\t} else {\r\n\t\treturn Math.round(num / 100) / 10 + \"K\";\r\n\t}\r\n};\r\n\r\nconst MapChart = ({ setTooltipContent, onClick }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n\t\t\t\t<ZoomableGroup>\r\n\t\t\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\t\tgeographies.map((geo) => (\r\n\t\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\t\t\t\tNAME,\r\n\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\r\n\t\t\t\t\t\t\t\t\t\t} = geo.properties;\r\n\t\t\t\t\t\t\t\t\t\tlet infections = Math.round(\r\n\t\t\t\t\t\t\t\t\t\t\t0.0001 * POP_EST\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tlet deaths = Math.round(\r\n\t\t\t\t\t\t\t\t\t\t\tinfections * 0.1\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tlet recoveries = Math.round(\r\n\t\t\t\t\t\t\t\t\t\t\tinfections * 0.04\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tsetTooltipContent(\r\n\t\t\t\t\t\t\t\t\t\t\t`${NAME} — ${rounded(\r\n\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST\r\n\t\t\t\t\t\t\t\t\t\t\t)} <br /> \r\n                                                infections : ${infections} <br />\r\n                                                Deaths : ${deaths} <br />\r\n                                                recoveries : ${recoveries}`\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tconst { NAME, ISO_A2 } = geo.properties;\r\n\t\t\t\t\t\t\t\t\t\tonClick({ value: NAME, ISO_A2 });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t\t\t\tfill: ((_) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPOP_EST,\r\n\t\t\t\t\t\t\t\t\t\t\t\t} = geo.properties;\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn POP_EST\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? colorScale(POP_EST)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"#F5F4F6\";\r\n\t\t\t\t\t\t\t\t\t\t\t})(),\r\n\t\t\t\t\t\t\t\t\t\t\toutline: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\t\tfill: \"#F53\",\r\n\t\t\t\t\t\t\t\t\t\t\toutline: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tpressed: {\r\n\t\t\t\t\t\t\t\t\t\t\tfill: \"#E42\",\r\n\t\t\t\t\t\t\t\t\t\t\toutline: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Geographies>\r\n\t\t\t\t</ZoomableGroup>\r\n\t\t\t</ComposableMap>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, { useState } from \"react\";\r\nimport MapChart from \"./components/MapChart\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./styles.sass\";\r\n\r\n// import { useQuery } from \"@apollo/react-hooks\";\r\n// import { gql } from \"apollo-boost\";\r\n\r\n// const QUERY = gql`\r\n// \tquery($date: String!) {\r\n// \t\tgodView(date: $date) {\r\n// \t\t\tdate\r\n// \t\t\tterritory\r\n// \t\t\tconfirmed\r\n// \t\t}\r\n// \t}\r\n// `;\r\n\r\nconst Map = ({ onClick }) => {\r\n\t// const { loading, error, data } = useQuery(QUERY, {\r\n\t// \tvariables: { date: \"03/01/2020\" },\r\n\t// });\r\n\r\n\t// let content = <p>{JSON.stringify(data)}</p>;\r\n\t// if (error) content = <p style={{ color: \"red\" }}>{error}</p>;\r\n\t// else if (loading) content = <p>loading...</p>;\r\n\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n\t\t<div id=\"mapPanel\" className=\"mainPanel\">\r\n\t\t\t<MapChart onClick={onClick} setTooltipContent={setContent} />\r\n\t\t\t<ReactTooltip html={true}>{content}</ReactTooltip>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nconst AreaSeries = () => {\r\n\treturn <div className=\"mainPanel\"></div>;\r\n};\r\n\r\nexport default AreaSeries;\r\n","import React from \"react\";\r\n\r\nconst MarkSeries = () => {\r\n\treturn <div className=\"mainPanel\"></div>;\r\n};\r\n\r\nexport default MarkSeries;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div id=\"footer\">\r\n\t\t\t<span>Footer</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./styles/antd-overrides.less\";\r\nimport \"./styles/index.sass\";\r\n\r\n// import config from \"./config\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport Info from \"./components/Info\";\r\nimport Map from \"./components/Map\";\r\nimport AreaSeries from \"./components/AreaSeries\";\r\nimport MarkSeries from \"./components/MarkSeries\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst App = () => {\r\n\tconst client = new ApolloClient();\r\n\r\n\tlet [country, setCountry] = useState({ value: \"morocco\", ISO_A2: \"MA\" });\r\n\r\n\treturn (\r\n\t\t<ApolloProvider client={client}>\r\n\t\t\t<>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div id=\"mainContainer\">\r\n\t\t\t\t\t<div id=\"mainContainer-subC1\">\r\n\t\t\t\t\t\t<div id=\"mainContainer-subC1-subC\">\r\n\t\t\t\t\t\t\t<SearchBar\r\n\t\t\t\t\t\t\t\tonSelect={(country) => setCountry(country)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Info country={country} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Map onClick={(country) => setCountry(country)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"mainContainer-subC2\">\r\n\t\t\t\t\t\t<AreaSeries />\r\n\t\t\t\t\t\t<MarkSeries />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</>\r\n\t\t</ApolloProvider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}